#!/bin/ksh

#  ccInstall.func
#  Support
#
#  Created by Carol Clark on 10/20/11.
#  Copyright 2011 C & C Software, Inc. All rights reserved.
#  Confidential and Proprietary.

NAME='ccInstall -- provides functions that support install scripts'
USAGE='\n
\t	ccInstall commandFlag objectReference ...\n
\t\t		commandFlag: see descriptions below\n
\t\t		resultObject: object to contain results\n
\t	ccInstall --getActions resultObject [actionString]\n
\t\t		actionString: [-[citu]+] - actions requested (clean, install, test, upload)\n
\t\t\t			default: -it
'
HELP="NAME: ${NAME}\nUSAGE: ${USAGE}"

RC_SyntaxError=10
RC_InsufficientArguments=11
RC_InvalidCommandParameter=12
RC_InvalidActionFlag=13

#^ 1 === top
trapString='errtrap $0 $LINENO'
#trap "$trapString" ERR

function getActions {
	typeset -n resultObj=$1
	resultObj=(
		actionString=${actionString}
		doClean=0
		doInstall=0
		doTest=0
		doUpload=0
		errorCount=0
		errorMessage=""
		resultTag=""
		resultString=""
	)
	resultCode=0

	if [[ -n ${2} ]] ; then
		actionString="${2#-}"
		if [[ ${actionString} = ${2} ]] ; then
			resultObj.resultTag="err_SyntaxError"
			resultObj.errorMessage="actionString $2: expected first character '-'"
			resultCode=$RC_SyntaxError
		fi
	else
		actionString="it"
	fi
	resultObj.actionString=${actionString}

	if [[ ${resultCode} = 0 ]] ; then
		typeset -i i=${#actionString}
		typeset -i errorCount
		while [[ $i > 0 ]] ; do
			ch=$(print ${actionString} | cut -c ${i})
			case "${ch}" in
				"c" )	resultObj.doClean=1;;
				"i" )	resultObj.doInstall=1;;
				"t" )	resultObj.doTest=1;;
				"u" )	resultObj.doUpload=1;;
				* )		if [[ ${resultObj.errorCount} = 0 ]] ; then
							resultObj.resultTag="err_InvalidActionFlag"
							errorString='invalid action flag '"${ch}"
						fi
						errorCount+=1
						resultCode=$RC_InvalidActionFlag
						;;
			esac
			i=i-1
		done
		if [[ errorCount > 0 ]] ; then
			resultObj.errorMessage='ccInstall --getActions: '"${errorString}"
			resultObj.errorCount=$errorCount
		fi
	fi

	return $resultCode
}

function ccInstall {
	if [[ $# < 2 ]] ; then
		if [[ $# > 0 ]] ; then
			print "$0: insufficient arguments: expected $0 commandFlag objectReference ..."
		fi
		print "${HELP}"
		return $RC_InsufficientArguments
	fi
	case "${1}" in
		"--getActions" )
			getActions "${2}" "${3}"
			return $?
			;;
		"--help" )
			typeset -n resultObj=$2
			resultObj=(
				resultString="${HELP}"
				resultTag="helpString"
			)
			;;
		* )
			typeset -n resultObj=$2
			resultObj=(
				resultTag='err_InvalidActionParameter'
				errorMessage="invalid action parameter $1"
				errorCount=1
			)
			return $RC_InvalidCommandParameter
			;;
	esac
	return 0
}
